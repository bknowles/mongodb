#!/bin/bash

# mongod - Startup script for mongod

# chkconfig: 35 85 15
# description: Mongo is a scalable, document-oriented database.
# processname: mongod
# config: /etc/mongodb.conf
# pidfile: /var/run/mongo/mongo.pid

. /etc/rc.d/init.d/functions

# things from mongodb.conf get there by mongod reading it

###
### This startup script based on the version supplied by 10gen in
### their version 2.0.0 package of mongo-10gen-server from their
### CentOS/Red Hat repo at <http://downloads-distro.mongodb.org/repo/redhat/os>.
###
### See http://www.mongodb.org/display/DOCS/CentOS+and+Fedora+Packages
### for the repo information, accessed on Thu Sep 29 14:26:31 CDT 2011
###
### Modified by: Brad Knowles <bknowles@ihiji.com>
###
### Updated to make more generic and applicable to mongos as well as
### mongod.  Updated on Thu Oct 20 18:10:32 CDT 2011
###

# NOTE: if you change any OPTIONS here, you get what you pay for:
# this script assumes all options are in the config file.
CONFIGFILE="/etc/mongodb.conf"
OPTIONS=" -f $CONFIGFILE"
SYSCONFIG="/etc/sysconfig/mongod"

# FIXME: 1.9.x has a --shutdown flag that parses the config file and
# shuts down the correct running pid, but that's unavailable in 1.8
# for now.  This can go away when this script stops supporting 1.8.
PROG="mongod"
BN0=`basename $0`

if [ "${BN0}" == "mongos" ] ; then
    PROG="mongos"
fi

if [ "${DAEMON}x" == "x" ] ; then
    mongod=${MONGOD-/usr/bin/${PROG}}
else
    mongod=$DAEMON
fi

MONGO_USER=mongodb
MONGO_GROUP=mongodb

. "$SYSCONFIG" || true

start()
{
  echo -n $"Starting ${PROG}: "
  daemon --user "$MONGO_USER" $mongod $OPTIONS $DAEMON_OPTS
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && touch /var/lock/subsys/mongod
}

stop()
{
  echo -n $"Stopping ${PROG}: "
  killproc  $mongod
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/mongod
}

restart () {
	stop
	start
}

ulimit -n 12000
RETVAL=0

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart|reload|force-reload)
    restart
    ;;
  condrestart)
    [ -f /var/lock/subsys/mongod ] && restart || :
    ;;
  status)
    status $mongod
    RETVAL=$?
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart}"
    RETVAL=1
esac

exit $RETVAL
